using System::Container;

namespace System::Console {
    public func putchar(ch : char) : void {
        @vasm("\nc_pvar 0\nsys 0\ni32_pop\n");
    }
    public func getchar() : char {
        @vasm("\nsys 1\nvret\n");
    }
    public func print(x : int) : void {
        @vasm("\ni32_pvar 0\nsys 2\ni32_pop\n");
    }
    public func print(x : float) : void {
        @vasm("\nf32_pvar 0\nsys 10\ni32_pop\n");
    }
    public func print(str : char[]) : void {
        for (var i = 0; str[i] != '\0'; i++) putchar(str[i]);
    }
    public func inputInt(base : int = 10) : int {
        var x = 0, m = 1, ch = getchar();
        while (ch < '0' || ch > '9') {
            if (ch == '-') m = 0-1;
            ch = getchar();
        }
        if (base <= 10)
            while ('0' <= ch && ch <= '9') 
                x = x * base + (ch - '0') as int,
                ch = getchar();
        else
            while (('0' <= ch && ch <= '9') || ('a' <= ch && ch <= 'z')) {
                if (('0' <= ch && ch <= '9')) x = x * base + (ch - '0') as int;
                else x = x * base + (ch - 'a') as int;
                ch = getchar();
            }
        return x * m;
    }

    public class FormatString {
        private var fmtStr : String, dtStr : Array<$String$>, fmtSize : Array<$uint$>;
        public func @constructer(fmtStr : String) : void { @this.fmtStr = fmtStr, dtStr = $Array<$String$>(), fmtSize = $Array<$uint$>(); }
        public func addData(data : String) : void { dtStr.append(data); }
        public func output() : String {
            var res = $String(), dtId = 0u;
            for (var i = 0u; i < fmtStr.getLength(); i++) {
                if (fmtStr[i] != '%') res.append(fmtStr[i]);
                else {
                    if (fmtStr[i + 1] == '%') res.append('%');
                    else i = fmtSize[dtId], res.appendStr(dtStr[dtId++]);
                }
            }
            return res;
        }
        private func analysis() : int {
            for (var i = 0u; i < fmtStr.getLength(); i++) {
                if (fmtStr[i] != '%') continue;
                if (fmtStr[i + 1] == '%') continue;
                if (fmtStr[i + 1] == 's') fmtSize.append(2u);
            }
        }
    }
}

public class AppendDataString : Shl<$FormatString, String, FormatString$> {
    
}